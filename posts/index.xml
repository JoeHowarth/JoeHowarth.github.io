<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Joe Howarth</title>
    <link>https://joehowarth.github.io/posts/</link>
    <description>Recent content in Posts on Joe Howarth</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>JosepheHowarth@gmail.com (Joe Howarth)</managingEditor>
    <webMaster>JosepheHowarth@gmail.com (Joe Howarth)</webMaster>
    <lastBuildDate>Sat, 15 Jun 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://joehowarth.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Challenging A Player</title>
      <link>https://joehowarth.github.io/posts/challengingtheplayer/</link>
      <pubDate>Sat, 15 Jun 2019 00:00:00 +0000</pubDate>
      <author>JosepheHowarth@gmail.com (Joe Howarth)</author>
      <guid>https://joehowarth.github.io/posts/challengingtheplayer/</guid>
      <description>How to challenge a Player Without extensive Reinforcement Learning, the AIs in the simulation cannot rival the long-term planning and strategic thinking of a thoughtful human. Most AI&amp;rsquo;s will be simple heuristic agents that respond to their environment in an attempt to maximize their particular objectives (reward function). These agents will be incapable of strategic thinking.
So how can the player be challenged in such an environment? Here are a few avenues:</description>
    </item>
    
    <item>
      <title>Designing the Population System</title>
      <link>https://joehowarth.github.io/posts/populationdesign/</link>
      <pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate>
      <author>JosepheHowarth@gmail.com (Joe Howarth)</author>
      <guid>https://joehowarth.github.io/posts/populationdesign/</guid>
      <description>Population Design Document How people are represented determines the flexibility, level of detail and performance of the above societal model. A vast number of attributes apply to people including:
health, age, sex occupation, skills culture, religion, race ideas/mindsets/attitudes, (imperfect) information relationships, membership of groups location For influential people (ie. actors), all these factors can be modelled on an individual basis, however this approach clearly can&amp;rsquo;t work for the nameless masses. Therefore an important design decision is how to balance the trade-offs between detail, implementation flexibility + complexity and runtime performance.</description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>https://joehowarth.github.io/posts/architecture/</link>
      <pubDate>Thu, 18 Apr 2019 00:00:00 +0000</pubDate>
      <author>JosepheHowarth@gmail.com (Joe Howarth)</author>
      <guid>https://joehowarth.github.io/posts/architecture/</guid>
      <description>Architecture High level overview of each module&amp;rsquo;s purpose and function.
Modules Terrain Generation World Building / State Initialization Server 3. Simulation 4. Networking Client UI Graphical Map Terrain Generation Constructs semi-random continents, islands, heightmap, biomes, raw resources (metal deposits etc.). Equivalent of Comp Geom final project, but bigger and better!
Should use plate tectonics for world level, probably external library Then &amp;lsquo;up-sample&amp;rsquo; using existing techniques to gain higher detail Separate process Either CLI or GUI Probably long-running Choose from several candidates before proceeding to World Building Export data in common format for re-use (protobuf, json, &amp;hellip;) World Building / State Initialization Take terrain &amp;amp; climate and produce initial state of world before day0</description>
    </item>
    
    <item>
      <title>Terrain Generator Module</title>
      <link>https://joehowarth.github.io/posts/terraingenerator/</link>
      <pubDate>Tue, 16 Apr 2019 00:00:00 +0000</pubDate>
      <author>JosepheHowarth@gmail.com (Joe Howarth)</author>
      <guid>https://joehowarth.github.io/posts/terraingenerator/</guid>
      <description>Terrain Generator Module This module will produce the base maps that the rest of the world is built on top of. This module should be standalone and therefore easily runnable and configurable without the rest of the project. This has several advantages:
Faster compilation times =&amp;gt; faster iteration feedback loop Ability to generate many candidate maps and select the most interesting ones to build a full world with. Loading a world from disk is, generally, much faster than having to recompute it each time from a seed =&amp;gt; faster simulation load times.</description>
    </item>
    
    <item>
      <title>World Building Module</title>
      <link>https://joehowarth.github.io/posts/worldbuilding/</link>
      <pubDate>Tue, 16 Apr 2019 00:00:00 +0000</pubDate>
      <author>JosepheHowarth@gmail.com (Joe Howarth)</author>
      <guid>https://joehowarth.github.io/posts/worldbuilding/</guid>
      <description>World Building Module Purpose This module should take a series of map files produced by the Terrain Generator as input and construct a full initial state that the Simulation Engine can process. The map files should contain spatial data on terrain, geology, water systems and biomes. While some of these factors may eventually be simulated on the game&amp;rsquo;s timescale, most don&amp;rsquo;t change rapidly enough to justify the initial complexity and will likely initially be static.</description>
    </item>
    
    <item>
      <title>Map Generation</title>
      <link>https://joehowarth.github.io/posts/map-generation/</link>
      <pubDate>Thu, 01 Nov 2018 20:21:39 -0400</pubDate>
      <author>JosepheHowarth@gmail.com (Joe Howarth)</author>
      <guid>https://joehowarth.github.io/posts/map-generation/</guid>
      <description>Part 2 in Historical Simulation series Societies and peoples cannot exist without a world&amp;hellip; so let&amp;rsquo;s build one!
When starting this project, we could either use Earth as the source of geography and climate, or attempt to create plausible alternatives. Using Earth brings with it all the expectations from history about what should happen where and when, even if much of history was based not on inexorable drives, but chance. Instead we will create a fresh set of terrain for each simulation, along with climate, biomes and basic geology.</description>
    </item>
    
    <item>
      <title>Map Generation Project</title>
      <link>https://joehowarth.github.io/posts/mapgen_readme/</link>
      <pubDate>Thu, 01 Nov 2018 16:29:11 -0400</pubDate>
      <author>JosepheHowarth@gmail.com (Joe Howarth)</author>
      <guid>https://joehowarth.github.io/posts/mapgen_readme/</guid>
      <description>Map Generation Project By Joe Howarth Purpose This project seeks to procedurally create plausible geography and display it as a map. The generator will be used for creating the starting conditions in a historical population dynamics simulation.
How to Run npm i npm run serve Methodology Unlike many map and terrain generators, this project does not use noise as the fundamental building block. Instead, it uses a Delaunay triangulation over semi-random points, then combines elevations from several hill, mountain, basin and slope functions.</description>
    </item>
    
    <item>
      <title>Dynamic Grand Strategy</title>
      <link>https://joehowarth.github.io/posts/dynamic-grand-strategy/</link>
      <pubDate>Thu, 11 Oct 2018 16:29:11 -0400</pubDate>
      <author>JosepheHowarth@gmail.com (Joe Howarth)</author>
      <guid>https://joehowarth.github.io/posts/dynamic-grand-strategy/</guid>
      <description>Grand strategy games like Europa Universalis, Crusader Kings, Civilization, Victoria and even Total War each immerse the player in a simulated world. Which aspects of reality they focus on while abstracting (or ignoring) the rest, defines the experience and the game. Crusader Kings stands out as the only game attempting to model leaders&amp;rsquo; intricasy and humanity. Victoria, through representing and tying populations&amp;rsquo; plight or prosperity to events in the world abroad.</description>
    </item>
    
  </channel>
</rss>
